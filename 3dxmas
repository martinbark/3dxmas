#!/usr/bin/env node

var async = require('async');
if (process.env.NODE_ENV !== 'test') {
  var gpio = require('rpi-gpio');
}

var animations = {
  lightsInOrder: require('./lib/lightsInOrder.json')
};

var states = {
  'ON': true,
  'OFF': false
};

var ledToGpioPin = {
  '1': 3,
  '2': 7,
  '3': 8,
  '4': 10,
  '5': 11,
  '6': 12,
  '7': 13,
  '8': 15,
  '9': 16,
  '10': 18,
  '11': 19,
  '12': 21,
  '13': 22,
  '14': 23,
  '15': 24,
  '16': 26,
  '17': 29,
  '18': 31,
  '19': 32,
  '20': 33,
  '21': 35,
  '22': 36,
  '23': 37,
  '24': 38,
  '25': 40
};

async.eachOf(ledToGpioPin, function(pin, led, cb) {
  gpioSetup(led, pin, cb)
}, function(err) {
  console.log('Pins set up');
  run();
});

function getRandomInt(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

function run() {
  async.forever(function(forever) {
    pickAnimation(forever)
  }, function(err) {
    console.error(err);
    process.exit(1);
  });
}

function pickAnimation(done) {
  var animationsKeys = Object.keys(animations);
  var randomAnimation = animationsKeys[getRandomInt(0, animationsKeys.length-1)];
  console.log('Animation:', randomAnimation);
  doAnimation(animations[randomAnimation], done);
}

function doAnimation(animationSeq, done) {
  async.eachSeries(animationSeq, function(seq, next) {
    delayedWrite(seq.led, seq.state, seq.delay || 100, next);
  }, function(err) {
    return done(err);
  });
}

function delayedWrite(pin, value, delay, callback) {
  setTimeout(function() {
    gpioWrite(pin, value, callback);
  }, delay);
}

function gpioWrite(led, state, done) {
  var pin = ledToGpioPin[led];
  var value = states[state];
  console.log('LED ' + led + ', pin ' + pin + ': ' + value);
  if (process.env.NODE_ENV === 'test') {
    return done(null);
  } else {
    gpio.write(pin, value, done);
  }
}

function gpioSetup(led, pin, done) {
  console.log('LED ' + led + ', pin ' + pin + ': setup');
  if (process.env.NODE_ENV === 'test') {
    return done(null);
  } else {
    gpio.setup(pin, gpio.DIR_OUT, done);
  }
}
